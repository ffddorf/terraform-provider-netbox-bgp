---
version: "3.7"
services:
  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=netbox
      - POSTGRES_PASSWORD=netbox
      - POSTGRES_DB=netbox
  redis:
    image: redis:6-alpine
  netbox: &netbox-base
    build:
      context: tools/integration
      args:
        NETBOX_VERSION: ${NETBOX_VERSION:-4.0.9}
        NETBOX_BGP_VERSION: ${NETBOX_BGP_VERSION:-0.13.2}
    depends_on:
      - postgres
      - redis
    ports:
      - 8001:8080
    environment:
      #- DEBUG=True
      - CORS_ORIGIN_ALLOW_ALL=True
      - DB_NAME=netbox
      - DB_USER=netbox
      - DB_PASSWORD=netbox
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - REDIS_DATABASE=0
      - REDIS_SSL=false
      - REDIS_CACHE_HOST=redis
      - REDIS_CACHE_DATABASE=1
      - REDIS_CACHE_SSL=false
      - SECRET_KEY=0123456789abcdefghij0123456789abcdefghij0123456789
      - SKIP_STARTUP_SCRIPTS=false
      - SKIP_SUPERUSER=false
      - SUPERUSER_NAME=admin
      - SUPERUSER_EMAIL=admin@example.com
      - SUPERUSER_PASSWORD=admin
      - SUPERUSER_API_TOKEN=${NETBOX_API_TOKEN:-0123456789abcdef0123456789abcdef01234567}
    volumes:
      - netbox-media:/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status/"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 5s

  netbox-worker:
    <<: *netbox-base
    ports: []
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker

volumes:
  netbox-media:
